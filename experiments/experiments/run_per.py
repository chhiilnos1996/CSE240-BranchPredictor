import math

for b in range(9, 14):
    for h in range(12,34):
        result = (b+1)*(h+1);
        s = math.floor(pow(2,15)/result);
        print("# ", b,h,s, "->")

# files predictor.c predictor.h main.c
# 12 ghr 3.00 on gradescope 4.64 docker
# tournament to beat 2.6, 2.7

# threshold -> floor(1.93h) + 14
# number of perceptron in the table
# ghr length
# pc -> hash

# number of bits required for the weight
# number of weight for each perceptron = h+1
# h =  ghr length
# top size = 100
# 3771697 branches
# hash function = pc % (top_size)
# each perceptron 4096*16 (16 bits) > 37716 > 4096*8 (15 bits)
# top size = 1000 -> 4096 > 3771 (12 bits)

# increase h, top size = 50 aliasing obvious
# pow(2,4) * pow(2,11) = pow(2,15)
# pow(2,4) * pow(2,11) = pow(2,15)
# topsize * (h+1) = 2^11 = 2048

#  9 12 252 -> 2.62
#  9 13 234 ->
#  9 14 218 -> 2.59
#  9 15 204 ->
#  9 16 192 -> 2.47
#  9 17 182 ->
#  9 18 172 -> 2.53
#  9 19 163 ->
#  9 20 156 -> 2.38
#  9 21 148 ->
#  9 22 142 -> 2.37
#  9 23 136 ->
#  9 24 131 -> 2.40
#  9 25 126 -> 2.40
#  9 26 121 -> 2.29
#  9 27 117 -> 2.35
#  9 28 112 -> 2.29
#  9 29 109 -> 2.32
#  9 30 105 -> 2.37
#  9 31 102 -> 2.34
#  9 32 99 -> 14.34
#  9 33 96 -> 10.21


#  10 12 229 -> 2.65
#  10 13 212 ->
#  10 14 198 ->
#  10 15 186 ->
#  10 16 175 -> 2.58
#  10 17 165 ->
#  10 18 156 ->
#  10 19 148 ->
#  10 20 141 -> 2.38
#  10 21 135 ->
#  10 22 129 ->
#  10 23 124 ->
#  10 24 119 -> 2.49
#  10 25 114 ->
#  10 26 110 ->
#  10 27 106 ->
#  10 28 102 -> 2.36
#  10 29 99 ->
#  10 30 96 ->
#  10 31 93 ->
#  10 32 90 -> 14.7
#  10 33 87 ->


#  11 12 210 -> 2.68
#  11 13 195 ->
#  11 14 182 ->
#  11 15 170 ->
#  11 16 160 -> 2.52
#  11 17 151 ->
#  11 18 143 ->
#  11 19 136 ->
#  11 20 130 -> 2.37
#  11 21 124 ->
#  11 22 118 ->
#  11 23 113 ->
#  11 24 109 -> 2.39
#  11 25 105 ->
#  11 26 101 ->
#  11 27 97 ->
#  11 28 94 -> 2.32
#  11 29 91 ->
#  11 30 88 ->
#  11 31 85 ->
#  11 32 82 -> 15.15
#  11 33 80 ->

 
#  12 12 193 -> 2.65
#  12 13 180 ->
#  12 14 168 ->
#  12 15 157 ->
#  12 16 148 -> 2.52
#  12 17 140 ->
#  12 18 132 ->
#  12 19 126 ->
#  12 20 120 -> 2.36
#  12 21 114 ->
#  12 22 109 ->
#  12 23 105 ->
#  12 24 100 -> 2.42
#  12 25 96 ->
#  12 26 93 ->
#  12 27 90 ->
#  12 28 86 -> 2.45
#  12 29 84 ->
#  12 30 81 ->
#  12 31 78 ->
#  12 32 76 -> 14.97
#  12 33 74 ->


#  13 12 180 ->
#  13 13 167 ->
#  13 14 156 ->
#  13 15 146 ->
#  13 16 137 ->
#  13 17 130 ->
#  13 18 123 ->
#  13 19 117 ->
#  13 20 111 -> 2.53
#  13 21 106 ->
#  13 22 101 ->
#  13 23 97 ->
#  13 24 93 -> 2.51
#  13 25 90 ->
#  13 26 86 ->
#  13 27 83 ->
#  13 28 80 -> 2.36
#  13 29 78 ->
#  13 30 75 ->
#  13 31 73 ->
#  13 32 70 ->
#  13 33 68 ->

